name: Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  GO_VERSION: '1.23'

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run unit tests
      run: go test -v -race -coverprofile=coverage.out ./internal/...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.repository == 'fbettag/unifi-gate-opener'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run integration tests with UniFi controller
      env:
        UNIFI_CONTROLLER_URL: ${{ secrets.UNIFI_CONTROLLER_URL }}
        UNIFI_USERNAME: ${{ secrets.UNIFI_USERNAME }}
        UNIFI_PASSWORD: ${{ secrets.UNIFI_PASSWORD }}
        UNIFI_SITE_ID: ${{ secrets.UNIFI_SITE_ID }}
      run: |
        if [ -n "$UNIFI_CONTROLLER_URL" ]; then
          echo "Running integration tests with real UniFi controller"
          go test -v -tags=integration ./cmd/... -timeout=5m
        else
          echo "Skipping integration tests - UniFi credentials not configured"
        fi

  # Lint and security scan disabled for now - can be re-enabled after fixing cyclomatic complexity
  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #
  #   - name: Set up Go
  #     uses: actions/setup-go@v5
  #     with:
  #       go-version: ${{ env.GO_VERSION }}
  #
  #   - name: Run golangci-lint
  #     uses: golangci/golangci-lint-action@v4
  #     with:
  #       version: latest
  #       args: --timeout=5m
  #
  # security:
  #   name: Security Scan
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #
  #   - name: Set up Go
  #     uses: actions/setup-go@v5
  #     with:
  #       go-version: ${{ env.GO_VERSION }}
  #
  #   - name: Run Gosec Security Scanner
  #     uses: securego/gosec@master
  #     with:
  #       args: ./...